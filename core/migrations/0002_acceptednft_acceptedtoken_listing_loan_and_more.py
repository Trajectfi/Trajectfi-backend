# Generated by Django 4.2 on 2025-03-16 21:23

import uuid

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="AcceptedNFT",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=70, unique=True, verbose_name="Collection Name"
                    ),
                ),
                (
                    "contract_address",
                    models.CharField(
                        max_length=70,
                        unique=True,
                        verbose_name="Collection Contract Address",
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AcceptedToken",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "name",
                    models.CharField(
                        max_length=70, unique=True, verbose_name="Token Name"
                    ),
                ),
                (
                    "contract_address",
                    models.CharField(
                        max_length=70,
                        unique=True,
                        verbose_name="Token Contract Address",
                    ),
                ),
                ("token_decimal", models.IntegerField(verbose_name="Token Decimal")),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "nft_contract_address",
                    models.CharField(
                        max_length=70, verbose_name="NFT Contract Address"
                    ),
                ),
                (
                    "nft_token_id",
                    models.PositiveBigIntegerField(verbose_name="NFT Token ID"),
                ),
                (
                    "token_contract_address",
                    models.CharField(
                        blank=True,
                        max_length=70,
                        null=True,
                        verbose_name="Token Contract Address",
                    ),
                ),
                (
                    "borrow_amount",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, verbose_name="Borrow Amount"
                    ),
                ),
                (
                    "repayment_amount",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, verbose_name="Repayment Amount"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Loan Duration"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Loan",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("borrower", models.CharField(max_length=70, verbose_name="Borrower")),
                ("lender", models.CharField(max_length=70, verbose_name="Lender")),
                ("loan_id", models.PositiveBigIntegerField(verbose_name="Loan Id")),
                (
                    "nft_contract_address",
                    models.CharField(
                        max_length=70, verbose_name="NFT Contract Address"
                    ),
                ),
                (
                    "nft_token_id",
                    models.PositiveBigIntegerField(verbose_name="NFT Token ID"),
                ),
                (
                    "token_contract_address",
                    models.CharField(
                        max_length=70, verbose_name="Token Contract Address"
                    ),
                ),
                (
                    "borrow_amount",
                    models.PositiveBigIntegerField(verbose_name="Borrow Amount"),
                ),
                (
                    "repayment_amount",
                    models.PositiveBigIntegerField(verbose_name="Repayment Amount"),
                ),
                ("duration", models.PositiveIntegerField(verbose_name="Loan Duration")),
                ("start_time", models.DateTimeField(verbose_name="Loan Start Time")),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Pending"),
                            (2, "Expired"),
                            (3, "Foreclosed"),
                            (4, "Repaid"),
                        ],
                        default=1,
                        verbose_name="Loan Status",
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RenegotiationOffer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "repayment_amount",
                    models.PositiveBigIntegerField(verbose_name="Repayment Amount"),
                ),
                ("duration", models.PositiveIntegerField(verbose_name="Loan Duration")),
                ("incentive", models.PositiveBigIntegerField(verbose_name="Incentive")),
                (
                    "signature",
                    models.TextField(blank=True, null=True, verbose_name="Signature"),
                ),
                (
                    "signature_expiry",
                    models.PositiveIntegerField(
                        blank=True, null=True, verbose_name="Signature Expiry"
                    ),
                ),
                (
                    "signature_chain_id",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Signature Chain Id"
                    ),
                ),
                (
                    "signature_unique_id",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, verbose_name="Signature Unique Id"
                    ),
                ),
                (
                    "status",
                    models.IntegerField(
                        choices=[(1, "Pending"), (2, "Countered"), (3, "Accepted")],
                        default=1,
                        verbose_name="Status",
                    ),
                ),
                (
                    "loan",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.loan"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "token_contract_address",
                    models.CharField(
                        max_length=70, verbose_name="Token Contract Address"
                    ),
                ),
                (
                    "borrow_amount",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, verbose_name="Borrow Amount"
                    ),
                ),
                (
                    "repayment_amount",
                    models.PositiveBigIntegerField(
                        blank=True, null=True, verbose_name="Repayment Amount"
                    ),
                ),
                ("duration", models.PositiveIntegerField(verbose_name="Loan Duration")),
                ("signature", models.TextField(verbose_name="Signature")),
                (
                    "signature_expiry",
                    models.PositiveIntegerField(verbose_name="Signature Expiry"),
                ),
                (
                    "signature_chain_id",
                    models.IntegerField(verbose_name="Signature Chain Id"),
                ),
                (
                    "signature_unique_id",
                    models.PositiveBigIntegerField(verbose_name="Signature Unique Id"),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="core.listing"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ("created_at",),
                "abstract": False,
            },
        ),
    ]
