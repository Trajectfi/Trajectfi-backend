[tool.poetry]
name = "trajectfi"
version = "0.1.0"
description = "Backend for trajectfi peer-to-peer NFT collaterization and token lending protocol"
authors = ["jaykayudo"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.12,<3.13"
django = "4.2"
djangorestframework = "^3.15.2"
python-dotenv = "^1.0.1"
django-rest-knox = "^5.0.2"
starknet-py = "^0.25.0"
pre-commit = "^4.1.0"
dj-database-url = "^2.3.0"
django-cors-headers = "^4.7.0"
psycopg2-binary = "^2.9.10"
factory-boy = "3.3.0"

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
isort = "^5.12.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
ruff = "^0.11.0"

[tool.black]
line-length = 88
target-version = ['py311']
docstring-code-format = true
docstring-code-line-length = 88

[tool.isort]
profile = "black"
line_length = 88
known_first_party = ["trajectfi", "core"]
multi_line_output = 3
include_trailing_comma = true
use_parentheses = true
ensure_newline_before_comments = true
combine_as_imports = true
skip = [
    "migrations/",  # Exclude the entire migrations directory
    "tests/",       # Exclude the entire tests directory
    "setup.py",     # Exclude a specific file
    "env/",
    ".ruff_cache/",
]

[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "migrations",
    "env",
]

line-length = 88
target-version = "py311"
indent-width = 4


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 88

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E", "E4", "E7", "E9", "F", "I001"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]

ignore = [
    "E203",  # Whitespace before ':' (conflicts with Black)
    "E501",  # Line too long (handled by Black)
    "F401"   # Unused import 
]


# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
